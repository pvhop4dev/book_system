services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: book_system
    restart: always
    environment:
      - TZ=Asia/Ho_Chi_Minh
      - GIN_MODE=release
    logging:
      driver: "local"
      options:
        max-size: "10m"
        max-file: "3"
    ports:
      - "3033:3033"
    volumes:
      - ./uploads:/app/uploads
      - ./configs:/app/configs:ro
      - ./i18n:/app/i18n:ro
      - uploads:/app/uploads
    depends_on:
      - mysql
      - redis
      - minio
    networks:
      - book_network

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: book_system
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3307:3306"  # Changed from 3306 to 3307 to avoid conflict
    networks:
      - book_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    ports:
      - "6380:6379"  # Changed host port to 6380 to avoid conflict
    volumes:
      - redis_data:/data
    networks:
      - book_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:RELEASE.2025-05-24T17-08-30Z
    container_name: minio
    restart: always
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9002:9000"  # API port (changed from 9000)
      - "9003:9001"  # Console port (changed from 9001)
    volumes:
      - minio_data:/data
    networks:
      - book_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  adminer:
    image: adminer
    restart: always
    ports:
      - 8083:8080  # Changed from 8081 to 8082 to avoid conflict
    networks:
      - book_network

networks:
  book_network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
  minio_data:
  uploads:
